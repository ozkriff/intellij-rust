action.Cargo.AttachCargoProject.text=Attach Cargo Project
action.Cargo.DetachCargoProject.text=Detach Cargo Project
action.Cargo.RefreshCargoProject.description=Update Cargo project information and download new dependencies
action.Cargo.RefreshCargoProject.text=Refresh Cargo Projects
action.Cargo.RunCargoCommand.text=Run Cargo Command
action.Cargo.RunExternalLinter.text=Run External Linter
action.Cargo.RustfmtCargoProject.description=Reformat cargo project with rustfmt
action.Cargo.RustfmtCargoProject.text=Reformat Cargo Project with Rustfmt
action.Cargo.RustfmtFile.description=Reformat current file with rustfmt
action.Cargo.RustfmtFile.text=Reformat File with Rustfmt
action.Cargo.RustfmtFile.progress=Reformatting file with rustfmt...
action.Cargo.RustfmtFile.file.text=Reformat {0} With Rustfmt
action.Cargo.RustfmtFile.default.text=Reformat File With Rustfmt
action.Cargo.ShowSettings.description=Edit Cargo settings for the current project
action.Cargo.ShowSettings.text=Cargo Settings
action.Cargo.ToggleExternalLinterOnTheFlyAction.text=Run External Linter (Cargo Check / Clippy) on the Fly

action.Rust.Build.description=Build project
action.Rust.Build.text=Build
action.Rust.ConsoleREPL.text=Rust REPL
action.Rust.CreateNewGithubIssue.description=Creates new issue in https://github.com/intellij-rust/intellij-rust repo
action.Rust.CreateNewGithubIssue.text=Create New Issue
action.Rust.GenerateConstructor.text=Constructor
action.Rust.GenerateDictionaries.text=Generate Rust Spellchecker Dictionaries
action.Rust.GenerateGetter.text=Getter
action.Rust.GenerateSetter.text=Setter
action.Rust.NewCargoCrate.description=Create new Cargo crate
action.Rust.NewCargoCrate.text=Cargo Crate
action.Rust.NewRustFile.description=Create new Rust file
action.Rust.NewRustFile.text=Rust File
action.Rust.RebuildAllDefMaps.text=Rust: Rebuild DefMap for all crates
action.Rust.RebuildCurrentDefMap.text=Rust: Rebuild DefMap for current file
action.Rust.ReexpandMacrosAction.text=Re-Expand All Rust Macros
action.Rust.RsConvertToNamedFields.description=Converts tuple struct to named fields
action.Rust.RsConvertToNamedFields.text=Convert to Named Fields
action.Rust.RsConvertToTuple.description=Converts struct to tuple representation
action.Rust.RsConvertToTuple.text=Convert to Tuple
action.Rust.RsDowngradeModuleToFile.description=Move this module to a single file
action.Rust.RsDowngradeModuleToFile.text=Downgrade Module to File
action.Rust.RsExtractEnumVariant.description=Extract a single enum variant into a separate struct
action.Rust.RsExtractEnumVariant.text=Extract Enum Variant
action.Rust.RsPromoteModuleToDirectoryAction.description=Move this module to a dedicated directory
action.Rust.RsPromoteModuleToDirectoryAction.text=Promote Module to Directory
action.Rust.ShareInPlayground.confirmation.selected.text=Do you want to upload selected text to the Rust Playground and make it public?
action.Rust.ShareInPlayground.confirmation=Do you want to upload {0} to the Rust Playground and make it public?
action.Rust.ShareInPlayground.description=Share code in Rust Playground (https://play.rust-lang.org/)
action.Rust.ShareInPlayground.notification.copy.url.text=Copy URL to clipboard
action.Rust.ShareInPlayground.notification.error=Failed to share the code in the Rust Playground
action.Rust.ShareInPlayground.notification.text=File shared in the Rust Playground: <a href="{0}">{0}</a>
action.Rust.ShareInPlayground.notification.title=Share in Rust Playground
action.Rust.ShareInPlayground.progress.title=Posting code to Rust Playground
action.Rust.ShareInPlayground.text=Share in Playground
action.Rust.RsExtractStructFields.description=Extract selected struct fields into a separate struct
action.Rust.RsExtractStructFields.text=Extract Struct Fields...
action.Rust.RsExtractStructFields.intention.text=Extract struct fields
action.Rust.RsExtractStructFields.choose.fields.title=Choose Fields to Extract
action.Rust.RsExtractStructFields.choose.name.dialog.title=Enter Name For the New Struct
action.Rust.RsExtractStructFields.choose.name.dialog.invalid.name=Invalid struct name
action.Rust.RsExtractStructFields.command.name=Extracting Struct Fields
action.Rust.RsExtractTrait.text=Extract Trait...
action.Rust.RsExtractTrait.description=Extract trait from the selected impl
action.Rust.RsExtractTrait.dialog.title=Extract Trait

action.Rust.ShowRecursiveMacroExpansionAction.text=Show Recursively Expanded Macro
action.Rust.ShowSingleStepMacroExpansionAction.text=Show Expanded Macro
action.Rust.ToggleNewResolve.text=Rust: Toggle new name resolution engine

cargo=Cargo
cargo.commandline.description=Configures Cargo projects under the given folder

group.Rust.MacroExpansionActions.text=Show Macro Expansion
group.Rust.Tools.text=Rust

gutter.rust.generated.typescript.declarations.name=Generated TypeScript declarations
gutter.rust.generated.typescript.declarations.popup.title=Generated Declarations
gutter.rust.generated.typescript.declarations.tooltip=Go to generated declaration
gutter.rust.implemented.item.name=Implemented item
gutter.rust.implemented.item.tooltip=Has implementations
gutter.rust.implementing.item=Implementing item
# for example: Open documentation for `rand`
gutter.rust.open.documentation.for=Open documentation for `{0}`
gutter.rust.open.documentation.name=Open documentation
gutter.rust.open.documentation.toml.name=Open documentation (TOML)
gutter.rust.overriding.item=Overriding item
gutter.rust.recursive.call.name=Recursive call

dialog.create.project.custom.add.template.action.add=Add
dialog.create.project.custom.add.template.name=Name:
dialog.create.project.custom.add.template.title=Add Custom Template
dialog.create.project.custom.add.template.url.description=cargo-generate supported template. <a href="https://github.com/cargo-generate/cargo-generate/blob/master/TEMPLATES.md">Available templates</a>
dialog.create.project.custom.add.template.url=Template URL:

# for example: Debug action is not available for `cargo help` command
notification.0.action.is.not.available.for.1.command={0} action is not available for `{1}` command
notification.action.attach.manually.text=Attach manually
notification.action.attach.text=Attach
notification.action.do.not.show.again.text=Do not show again
notification.action.set.up.toolchain.text=Set up toolchain
notification.can.not.attach.stdlib.sources=Can not attach stdlib sources automatically without rustup
notification.file.not.belong.to.cargo.project=File does not belong to any known Cargo project
notification.invalid.stdlib.source.path="Invalid Rust standard library source path: `{0}`
notification.no.cargo.projects.found=No Cargo projects found
notification.no.toolchain.configured=No Rust toolchain configured
notification.run.tests.as.root.windows=Running tests with Administrator privileges is not yet supported
notification.run.tests.as.root.unix=Running tests with root privileges is not yet supported

refactoring.change.signature.error.cfg.disabled.parameters=Cannot change signature of function with cfg-disabled parameters
refactoring.change.signature.name.conflict=The name {0} conflicts with an existing item in {1}
refactoring.change.signature.name=Change Signature
refactoring.change.signature.refactor.super.function=Method {0} implements base method of trait {1}.\nDo you want to refactor the base method?
refactoring.change.signature.visibility.conflict=The function will not be visible from {0} after the refactoring

rust.external.linter.cargo.check.item=Cargo Check
rust.external.linter.clippy.item=Clippy

run.target.build.arguments.comment=Additional arguments to pass to <b>cargo build</b> command in case of <b>Build on target</b> option is disabled
run.target.build.arguments.label=Additional build arguments:
run.target.cargo.executable.path.label=Cargo executable:
run.target.cargo.executable.version.label=Cargo version:
run.target.rustc.executable.path.label=Rustc executable:
run.target.rustc.executable.version.label=Rustc version:

run.config.rust.custom.build.custom.out.dir.label=Custom OUT_DIR
run.config.rust.custom.build.target.name={0}''s build.rs
run.config.rust.custom.build.runner.error.title=Unable to Run Custom Build Script

settings.rust.auto.import.on.completion=Import out-of-scope items on completion
settings.rust.auto.import.show.popup=Show import popup
settings.rust.auto.import.on.paste=Insert imports on paste
settings.rust.auto.import.exclude.label=Exclude from auto-import and completion:
settings.rust.auto.import.exclude.comment=Specify each path just as you would in a <code>use</code> declaration. Add <code>::*</code> to a path if you want to disable auto-import for all items whose paths include the given prefix. When excluding traits, specify whether you want to disable auto-import only for trait methods or for the trait name too. Note that a <code>use</code> declaration overwrites these settings.
settings.rust.auto.import.title=Rust

settings.rust.cargo.auto.update.project.label=Update project automatically when Cargo.toml changes
settings.rust.cargo.compile.all.targets.comment=Pass the <b>--target-all</b> option to Cargo <b>build</b>/<b>check</b> command
settings.rust.cargo.compile.all.targets.label=Compile all project targets if possible
settings.rust.cargo.moved.label=Cargo settings were moved to 'Build, Execution, Deployment | Build Tools | Cargo'
settings.rust.cargo.name=Cargo
settings.rust.cargo.offline.mode.comment=Pass the <b>--offline</b> option to Cargo to avoid network requests
settings.rust.cargo.offline.mode.label=Offline mode
settings.rust.cargo.show.first.error.label=Show the first error in the editor after a build failure automatically

settings.rust.code.style.align.return.type=Align return type to function parameters
settings.rust.code.style.align.where.clause.bounds=Align 'where' clause bounds
settings.rust.code.style.align.where.clause=Align 'where' clause to function parameters
settings.rust.code.style.around.associated.type.bindings=Around associated type bindings
settings.rust.code.style.between.declarations=Between declarations:
settings.rust.code.style.indent.where.clause=Indent 'where' clause
settings.rust.code.style.match.expressions.in.one.line=Match expressions in one line
settings.rust.code.style.name=Rust
settings.rust.code.style.punctuation=Punctuation

settings.rust.color.associated.function.call=Functions//Associated function call
settings.rust.color.associated.function.declaration=Functions//Associated function declaration
settings.rust.color.attribute=Attribute
settings.rust.color.char=Literals//Char
settings.rust.color.conditionally.disabled.code=Conditionally disabled code
settings.rust.color.const.parameter=Parameters//Const parameter
settings.rust.color.constant=Variables//Constant
settings.rust.color.crate=Types//Crate
settings.rust.color.enum.variant=Types//Enum variant
settings.rust.color.enum=Types//Enum
settings.rust.color.field=Variables//Field
settings.rust.color.format.parameter=Literals//Strings//Format parameter
settings.rust.color.format.specifier=Literals//Strings//Format specifier inside format parameter
settings.rust.color.function.call=Functions//Function call
settings.rust.color.function.declaration=Functions//Function declaration
settings.rust.color.generated.items=Items generated by macros
settings.rust.color.invalid.escape.sequence=Literals//Strings//Escape sequence//Invalid
settings.rust.color.keyword.unsafe=Keywords//Unsafe
settings.rust.color.keyword=Keywords//Keyword
settings.rust.color.lifetime=Parameters//Lifetime
settings.rust.color.macro=Functions//Macro
settings.rust.color.method.call=Functions//Method call
settings.rust.color.method.declaration=Functions//Method declaration
settings.rust.color.module=Types//Module
settings.rust.color.mutable.binding=Variables//Mutable binding
settings.rust.color.mutable.parameter=Parameters//Mutable parameter
settings.rust.color.number=Literals//Number
settings.rust.color.operation.sign=Braces and Operators//Operation sign
settings.rust.color.parameter=Parameters//Parameter
settings.rust.color.primitive=Types//Primitive
settings.rust.color.question.mark=Braces and Operators//? operator
settings.rust.color.rustdoc.bold=Rustdoc//Bold text
settings.rust.color.rustdoc.code=Rustdoc//Code
settings.rust.color.rustdoc.comment=Rustdoc//Comment
settings.rust.color.rustdoc.heading=Rustdoc//Heading
settings.rust.color.rustdoc.italic=Rustdoc//Italic text
settings.rust.color.rustdoc.link=Rustdoc//Link
settings.rust.color.scheme.title=Rust
settings.rust.color.self.parameter=Parameters//Self parameter
settings.rust.color.string=Literals//Strings//String
settings.rust.color.struct=Types//Struct
settings.rust.color.trait=Types//Trait
settings.rust.color.type.alias=Types//Type alias
settings.rust.color.type.parameter=Parameters//Type parameter
settings.rust.color.union=Types//Union
settings.rust.color.unsafe.code=Unsafe code
settings.rust.color.valid.escape.sequence=Literals//Strings//Escape sequence//Valid
settings.rust.color.variables.default=Variables//Default

settings.rust.completion.suggest.out.of.scope.items=Suggest out-of-scope items
settings.rust.completion.title=Rust

settings.rust.external.linters.additional.arguments.comment=Additional arguments to pass to the <b>cargo check</b> or <b>cargo clippy</b> command
settings.rust.external.linters.additional.arguments.label=Additional arguments:
settings.rust.external.linters.name=External Linters
settings.rust.external.linters.on.the.fly.comment=Adds code highlighting based on the external linter results. May affect the IDE performance
settings.rust.external.linters.on.the.fly.label=Run external linter to analyze code on the fly
settings.rust.external.linters.tool.comment=External tool for additional code analysis
settings.rust.external.linters.tool.label=External tool:

settings.rust.folding.title=Rust
settings.rust.folding.one.line.methods.checkbox=One-line methods

settings.rust.inlay.hints.for.closures=Closures
settings.rust.inlay.hints.for.iterators=Iterators as `impl Iterator<...>`
settings.rust.inlay.hints.for.loop.variables=Loop variables
settings.rust.inlay.hints.for.obvious.types=Obvious types
settings.rust.inlay.hints.for.same.consecutive.types=Same consecutive types
settings.rust.inlay.hints.for.type.placeholders=Type placeholders
settings.rust.inlay.hints.for.variables=Variables
settings.rust.inlay.hints.for=Show hints for:
settings.rust.inlay.hints.title.method.chains=Method chains
settings.rust.inlay.hints.title.types=Types
settings.rust.inlay.parameter.hints.only.smart=Only smart hints

settings.rust.rustfmt.additional.arguments.comment=Additional arguments to pass to <b>rustfmt</b> or <b>cargo fmt</b> command
settings.rust.rustfmt.additional.arguments.label=Additional arguments:
settings.rust.rustfmt.builtin.formatter.label=Use rustfmt instead of the built-in formatter
settings.rust.rustfmt.channel.label=Channel:
settings.rust.rustfmt.name=Rustfmt
settings.rust.rustfmt.run.on.save.label=Run rustfmt on Save

settings.rust.toolchain.download.rustup.dialog.title=Downloading Rust Standard Library
settings.rust.toolchain.download.rustup.link=Download via Rustup
settings.rust.toolchain.download.rustup.progress.text=Installing using Rustup...
settings.rust.toolchain.expand.macros.checkbox=Expand macros
settings.rust.toolchain.expand.macros.comment=Allow the plugin to process macro invocations to extract information for name resolution and type inference
settings.rust.toolchain.inject.rust.in.doc.comments.checkbox=Inject Rust language into documentation comments
settings.rust.toolchain.invalid.toolchain.error=Invalid toolchain location: can''t find Cargo in {0}
settings.rust.toolchain.location.label=Toolchain location:
settings.rust.toolchain.name=Rust
settings.rust.toolchain.not.applicable.version.text=N/A
settings.rust.toolchain.select.standard.library.dialog.title=Select the location of the standard library sources
settings.rust.toolchain.standard.library.label=Standard library:
settings.rust.toolchain.version.label=Toolchain version:

structure.view.show.macro.expanded=Show Items from Macro Expansions
structure.view.sort.visibility=Sort by Visibility

intention.Rust.ToggleFeatureIntention.enable=Enable feature `{0}`
intention.Rust.ToggleFeatureIntention.disable=Disable feature `{0}`
intention.Rust.ToggleFeatureIntention.family.name=Toggle feature state

# copy of `untrusted.project.notification.execution.error` from `ExternalSystemBundle.properties`
untrusted.project.notification.execution.error=Cargo project is untrusted, so its task cannot be executed.

copy.paste.convert.json.to.struct.dialog.title=Generate Rust Struct from JSON
copy.paste.convert.json.to.struct.dialog.text=The inserted text seems to be a JSON object. Do you want to generate a Rust struct from it?
advanced.setting.rust.group=Rust
advanced.setting.org.rust.convert.json.to.struct=Enable JSON to Rust conversion on paste
advanced.setting.org.rust.external.doc.url=Base URL for external documentation
advanced.setting.org.rust.macros.maximum.recursion.limit=Maximum recursion limit for macro expansion
advanced.setting.org.rust.macros.maximum.recursion.limit.description=Change it only if you experience performance problems

inspection.UnusedMustUse.description.type.attribute=Unused {0} that must be used
inspection.UnusedMustUse.description.function.attribute=Unused return value of {0} that must be used
inspection.UnusedMustUse.FixAddLetUnderscore.name=Add `let _ =`
inspection.UnusedMustUse.FixAddUnwrap.name=Add `.unwrap()`
inspection.UnusedMustUse.FixAddExpect.family.name=Add `.expect("")`

inspection.RedundantSemicolons.description.single=Unnecessary trailing semicolon
inspection.RedundantSemicolons.description.multiple=Unnecessary trailing semicolons
inspection.RedundantSemicolons.fix.name=Remove unnecessary trailing semicolons

inspection.DoubleMustUse.description=This function has a `#[must_use]` attribute, but returns a type already marked as `#[must_use]`
inspection.DoubleMustUse.FixRemoveMustUseAttr.name=Remove `#[must_use]` from the function

rust.code.vision.usage.hint={0,choice, 0#no usages|1#1 usage|2#{0,number} usages}
